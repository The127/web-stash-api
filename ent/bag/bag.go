// Code generated by entc, DO NOT EDIT.

package bag

import (
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the bag type in the database.
	Label = "bag"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldIcon holds the string denoting the icon field in the database.
	FieldIcon = "icon"
	// FieldUserID holds the string denoting the user_id field in the database.
	FieldUserID = "user_id"

	// EdgeItems holds the string denoting the items edge name in mutations.
	EdgeItems = "items"

	// Table holds the table name of the bag in the database.
	Table = "bags"
	// ItemsTable is the table the holds the items relation/edge.
	ItemsTable = "bag_items"
	// ItemsInverseTable is the table name for the BagItem entity.
	// It exists in this package in order to avoid circular dependency with the "bagitem" package.
	ItemsInverseTable = "bag_items"
	// ItemsColumn is the table column denoting the items relation/edge.
	ItemsColumn = "bag_items"
)

// Columns holds all SQL columns for bag fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldIcon,
	FieldUserID,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// NameValidator is a validator for the "name" field. It is called by the builders before save.
	NameValidator func(string) error
	// IconValidator is a validator for the "icon" field. It is called by the builders before save.
	IconValidator func(string) error
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
